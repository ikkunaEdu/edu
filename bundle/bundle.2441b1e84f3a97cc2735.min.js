(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ 127:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(128);


/***/ }),

/***/ 128:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(firebase, componentHandler) {

var _leaflet = __webpack_require__(72);

var _leaflet2 = _interopRequireDefault(_leaflet);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var riot = __webpack_require__(6);

// Initialize Firebase
// var firebase_config = {
//     apiKey: "AIzaSyBazjhv9RlQEdxo2HPJhK_6skEIYR5jscE",
//     authDomain: "customer-f1f57.firebaseapp.com",
//     databaseURL: "https://customer-f1f57.firebaseio.com",
//     projectId: "customer-f1f57",
//     storageBucket: "customer-f1f57.appspot.com",
//     messagingSenderId: "786938230312"
// };

// Initialize Firebase
var firebase_config = {
    apiKey: "AIzaSyCLMgB-SHEAvdeRZ95HWgusI4HpO3nkkvM",
    authDomain: "jobs-b5ccc.firebaseapp.com",
    databaseURL: "https://jobs-b5ccc.firebaseio.com",
    projectId: "jobs-b5ccc",
    storageBucket: "jobs-b5ccc.appspot.com",
    messagingSenderId: "420024400325"
};

firebase.initializeApp(firebase_config);

// import jQuery from 'jquery';
__webpack_require__(147);
__webpack_require__(148);
__webpack_require__(149);
__webpack_require__(150);
// require('./tags/chat-ux.tag')
__webpack_require__(151);
// require('./tags/test.tag')
__webpack_require__(152);
// require('./tags/map-ux.tag')
__webpack_require__(153);
// require('./tags/couchdb-ux.tag')
__webpack_require__(154);
// require('./tags/scanner-ux.tag')
__webpack_require__(155);
// require('./tags/uploadmodel-ux.tag')
__webpack_require__(156);
__webpack_require__(157);
__webpack_require__(158);

// require.ensure(['./tags/templar.tag'], function(require){
//     require('./models/GHModel000.js');
// });

// require.ensure(['./tags/templar.tag'], function(require){
//     require('./libraries/lightgl/main.js');
// });

// var mixinObject = {observable: riot.observable(),hello: "good", target: null, pov: -8};
// riot.mixin('target', mixinObject);
// import mapboxgl from 'mapbox-gl'

// mapboxgl.accessToken = 'pk.eyJ1IjoiaWtrdW5hIiwiYSI6ImNqMmlmYmE0bzAxaWQycmxnbjBud2F2ajkifQ.sQdC59LvHGRjQEc0EkhGBg';
// var map = new mapboxgl.Map({
//     container: 'map',
//     style: 'mapbox://styles/mapbox/streets-v9'
// });

var PouchDB = __webpack_require__(187);
var db = new PouchDB('observabledb');
// var remoteCouch = 'https://comanda:comandame@cau.ikkuna.io:6984/comanda';
var remoteCouch = null;
db.changes({
    since: 'now',
    live: true
}).on('change', updateObservable);
function updateObservable() {
    db.allDocs({ include_docs: true, descending: true }, function (err, doc) {
        console.log(doc.rows);
    });
    db.get("0").then(function (doc_revised) {
        if (doc_revised) {
            console.log('Updated: ', doc_revised.title);

            //OptsMixin.setOpts([{'document':doc_revised.riot.DATAtitle}], false);
            riot.DATA.trigger('receivedDoc', doc_revised.title);
            riot.update();
        } else {
            console.log('Could not update database, null object');
        }
    });
}
// Initialise a sync with the remote server
function sync() {
    //syncDom.setAttribute('data-sync-state', 'syncing');
    db.get("0").then(function (doc_revised) {
        if (doc_revised) {
            console.log('Synced: ', doc_revised.title);

            //VisMixin.setOpts([{ 'document': doc_revised.title }], false);
            //riot.mixin('vistest', VisMixin);
            riot.DATA.trigger('receivedDoc', doc_revised.title);
            riot.update();
        } else {
            console.log('Could not update database, null object');
        }
    });
    var opts = { live: true };
    db.replicate.to(remoteCouch, opts, syncError);
    db.replicate.from(remoteCouch, opts, syncError);
}
function syncError() {
    //syncDom.setAttribute('data-sync-state', 'error');
}
if (remoteCouch) {
    sync();
}

function fbauth() {

    riot.observable(this);
    this.signIn = function () {
        // Sign in Firebase using popup auth and Google as the identity provider.
        var GOOGLE_OATH_SCOPES = 'email, https://www.googleapis.com/auth/drive.metadata.readonly';
        var provider = new firebase.auth.GoogleAuthProvider();
        provider.addScope(GOOGLE_OATH_SCOPES);
        this.auth.signInWithPopup(provider).then(function (result) {
            // This gives you a Google Access Token.
            var token = result.credential.accessToken;
            console.log('access_token : ', token);
            //var gtoken = result.google.accessToken;
            console.log('gtoken : ', result);
            // The signed-in user info.
            var user = result.user;
            console.log('user : ', user);
            //gapi.client.drive.files.list().execute(function (list) { console.log('list : ',list)});
            var tokenObject = {
                access_token: token
            };
            //gapi.client.load('drive', 'v2', handleDriveLoad);
            //gapi.auth.setToken(tokenObject);

            console.log('gapi : ', gapi);
            riot.update();
        });
    };
    this.signOut = function () {
        // Sign out of Firebase.
        this.auth.signOut();
        riot.update();
        location.reload();
    };
    this.checkAuthState = function () {
        // Return true if the user is signed in Firebase
        console.log("We have user ? ", riot.fbauth.auth.currentUser !== null);
        if (riot.fbauth.auth.currentUser !== null) {
            var currentUser = this.auth.currentUser;
            console.log('Bienvenido');
            console.log(JSON.stringify(currentUser.displayName));
            console.log("Database : ", this.database, " with uid ", currentUser.uid);
            this.userdb = this.database.ref("/_users/" + currentUser.uid);
            this.searchChannel = this.database.ref("/docs/searchChannel/" + currentUser.uid);
            this.userdb.child('/last/kaf2json').on("value", function (snapshot /*, prevChildKey*/) {
                console.log("snapshot : ", snapshot.key);
                console.log("Value : ", snapshot.val());
                var doc_metadata = snapshot.val();
                var doc_key = snapshot.key;
                riot.DATA.trigger('receivedDoc', doc_metadata);
                riot.update();
            });
            this.searchChannel.child('response').on("value", function (snapshot) {
                console.log("searchChannel response :", snapshot);
                riot.DATA.trigger('searchResponse', snapshot.val());
            });
            riot.fbauth.userdb.child('/test').set('test');
            console.log("User db tested. Check test value.");
            return true;
        }

        // Display a message to the user using a Toast.
        var data = {
            message: 'You must sign-in first',
            timeout: 2000
        };
        //this.signInSnackbar.MaterialSnackbar.showSnackbar(data);
        console.log('auth : ', this.auth);
        return false;
    };
    this.onAuthStateChanged = function (user) {

        riot.myObs.trigger('loaded', user);
        // console.log('onAuthStateChanged.', riot.myObs)
        if (user && riot.myObs) {
            // User is signed in!
            // Get profile pic and user's name from the Firebase user object.
            riot.myObs.trigger('user', user);
            var profilePicUrl = user.photoURL;
            var userName = user.displayName;

            // Set the user's profile pic and name.
            riot.myObs.userPic.style.backgroundImage = 'url(' + (profilePicUrl || '/images/profile_placeholder.png') + ')';
            riot.myObs.userName.textContent = userName;

            // Show user's profile and sign-out button.
            riot.myObs.userName.removeAttribute('hidden');
            riot.myObs.userPic.removeAttribute('hidden');
            riot.myObs.signOutButton.removeAttribute('hidden');

            // Hide sign-in button.
            riot.myObs.signInButton.setAttribute('hidden', 'true');

            // We load currently existing chant messages.
            // this.loadMessages();
        } else {
            // User is signed out!
            // Hide user's profile and sign-out button.
            riot.myObs.userName.setAttribute('hidden', 'true');
            riot.myObs.userPic.setAttribute('hidden', 'true');
            riot.myObs.signOutButton.setAttribute('hidden', 'true');

            // Show sign-in button.
            riot.myObs.signInButton.removeAttribute('hidden');
        }
    };
    this.checkSetup = function () {
        //if (!window.firebase || !(firebase.app instanceof Function) || !window.config) { 
        if (!firebase || !(firebase.app instanceof Function)) {
            console.log('firebase : ', firebase);
            console.log('firebase credential : ', firebase.auth.AuthCrendential);
            window.alert('You have not configured and imported the Firebase SDK. ' + 'Make sure you go through the codelab setup instructions.');
        }
        //var currentUser = this.auth.currentUser;
        //console.log('firebase : ', firebase);
        //console.log('firebase credential : ',this.checkSignedInWithMessage());
        /*else if (config.storageBucket === '') {
          window.alert('Your Firebase Storage bucket has not been enabled. Sorry about that. This is ' +
              'actually a Firebase bug that occurs rarely. ' +
              'Please go and re-generate the Firebase initialisation snippet (step 4 of the codelab) ' +
              'and make sure the storageBucket attribute is not empty. ' +
              'You may also need to visit the Storage tab and paste the name of your bucket which is ' +
              'displayed there.');
        }*/
    };

    this.on('init', function () {
        this.checkSetup();
        this.trigger('initFirebase');
        riot.myObs = new myObs();
    });

    // Sets up shortcuts to Firebase features and initiate firebase auth.
    this.on('initFirebase', function () {
        // Shortcuts to Firebase SDK features.
        this.auth = firebase.auth();
        this.currentUser = firebase.auth().currentUser;
        this.database = firebase.database();
        this.storage = firebase.storage();
        // Initiates Firebase auth and listen to auth state changes.
        this.auth.onAuthStateChanged(this.onAuthStateChanged.bind(this));
    });

    this.on('checkSignedInWithMessage', function () {
        // Return true if the user is signed in Firebase
        console.log("We have user ? ", riot.fbauth.auth.currentUser !== null);
        if (riot.fbauth.auth.currentUser !== null) {
            var currentUser = this.auth.currentUser;
            console.log('hola');
            console.log(JSON.stringify(currentUser.displayName));
            console.log("myObs user : ", currentUser.uid);
            return true;
        } else {
            riot.myObs.loadingAsset.style.display = 'none';
            //document.getElementById('fullscreen').style.display = 'none';
            riot.myObs.signInPopUp.style.display = 'flex';
            console.log('not signed in');
        }

        // Display a message to the user using a Toast.
        var data = {
            message: 'You must sign-in first',
            timeout: 2000
        };
        //this.signInSnackbar.MaterialSnackbar.showSnackbar(data);
        console.log('auth : ', this.auth);
        return false;
    });

    this.on('getuser', function () {
        console.log("auth observable : ", riot.fbauth.auth);
        return riot.fbauth.auth.currentUser;
        // if (riot.fbauth.auth.currentUser) {
        //     var currentUser = riot.fbauth.auth.currentUser;
        //     console.log('Checking user login : ');
        //     console.log(JSON.stringify(currentUser.displayName));
        //     return true;
        // }
        // console.log('getuser triggered')
        // return false;
    });
}

// riot.fbauth = new fbauth();
// console.log(window.fbauth);

// end of fbauth initialization **************************************************


var myObs = function myObs() {
    console.log('myObs');
    riot.observable(this);

    this.loadingAsset = document.getElementById('loading');
    this.signInPopUp = document.getElementById('signinpop');

    this.uploader = document.getElementById('cv_uploader');
    this.fileButton = document.getElementById('fileButton');

    this.userPic = document.getElementById('user-pic');
    this.userName = document.getElementById('user-name');
    this.signInButton = document.getElementById('sign-in');
    this.signInImg = document.getElementById('signinpop-img');
    this.signOutButton = document.getElementById('sign-out');
    this.signInSnackbar = document.getElementById('must-signin-snackbar');

    // Saves message on form submit.
    // console.log(riot.fbauth)

    this.on('user', function (user) {
        this.user = user;
        if (riot.fbauth.checkAuthState()) {
            document.getElementById('loading').style.display = 'none';
            document.getElementById('fullscreen').style.display = 'none';
            console.log('signed in');
        } else {
            document.getElementById('loading').style.display = 'none';
            //document.getElementById('fullscreen').style.display = 'none';
            document.getElementById('signinpop').style.display = 'flex';
            console.log('not signed in');
        }
    });

    this.on('loaded', function (user) {

        this.signOutButton.addEventListener('click', function () {
            riot.fbauth.signOut();
        });
        this.signInButton.addEventListener('click', function () {
            riot.fbauth.signIn();
        });
        this.signInImg.addEventListener('click', function () {
            riot.fbauth.signIn();
        });

        if (user) {
            this.user = user;
            // this.signOutButton.addEventListener('click', riot.fbauth.signOut);
            // this.signInButton.addEventListener('click', riot.fbauth.signIn);
            console.log('User : ', this.user);
            var uid = this.user.uid;
            console.log("loaded uid : ", uid);

            this.fileButton.addEventListener('change', function (e) {
                // Get file
                var file = e.target.files[0];
                // const uid = e.data.uid;
                console.log("event : ", e);

                // Create a storage ref
                var storageRef = firebase.storage().ref("/_users/" + uid + "/documents/" + Date.now() + "_" + file.name);
                var databaseRef = firebase.database().ref();

                // Upload file
                var task = storageRef.put(file);

                // Update progress bar
                task.on('state_changed', function progress(snapshot) {
                    var percentage = snapshot.bytesTransferred / snapshot.totalBytes * 100;
                    riot.myObs.uploader.value = percentage;
                }, function error(err) {}, function complete() {
                    var storage = databaseRef.child("/_users/" + uid + "/storage");
                    var completed = task.snapshot;
                    console.log("task : ", completed);
                    console.log("metadata : ", completed.metadata);
                    // storage.set(JSON.stringify(completed.metadata));
                });
            });

            return true;
        }
    });
};

window.onload = function () {

    // riot.fbauth.trigger('init');
    // riot.fbauth.trigger('checkSignedInWithMessage')

    // var we_user = riot.fbauth.checkAuthState();

    // console.log("We have user again ??", we_user)


    // if (!we_user) {
    //     document.getElementById('loading').style.display = 'none';
    //     //document.getElementById('fullscreen').style.display = 'none';
    //     document.getElementById('signinpop').style.display = 'flex';
    //     console.log('not signed in')
    // }

    function setIntervalSyncMDL() {
        function syncMDL() {
            //componentHandler.downgradeAllComponentThatNotInClass();
            //console.log(window.fbauth.signInSnackbar);
            // componentHandler.upgradeElement(window.fbauth.signInSnackbar);
            // componentHandler.upgradeDom();
        }
        setInterval(syncMDL, 200);
    }
};

var DATA = function DATA() {
    console.log('DATA');
    riot.observable(this);
    // this.on("query", function(querystring) {
    //     console.log("querystring: ",querystring, typeof querystring.searchfield)
    //     if (typeof querystring.searchfield === 'string') {
    //         // var query = { query : querystring.searchfield }
    //         return riot.fbauth.searchChannel.child('query').set(querystring.searchfield)
    //     }
    // } )
};

riot.DATA = new DATA();

var observer = new MutationObserver(function (mutations) {
    var upgrade = false;

    for (var i = 0; i < mutations.length; i++) {
        if (mutations[i].addedNodes.length > 0) {
            upgrade = true;
            break;
        }
    }
    if (upgrade) {
        // If there is at least a new element, upgrade the DOM.
        // Note: upgrading elements one by one seems to insert bugs in MDL 
        window.componentHandler.upgradeDom();
        console.log("mutations:", mutations);
        //console.log('upgraded')
    }
});

observer.observe(document, {
    childList: true,
    subtree: true
});

var OptsMixin = {
    init: function init() {
        this.on('updated', function () {
            console.log('Mixin Updated!');
            //componentHandler.upgradeDom();
            window.componentHandler.upgradeDom();
            //riot.update();
        });
    },

    getOpts: function getOpts() {
        return this.opts;
    },

    setOpts: function setOpts(opts, update) {
        console.log('debug');
        this.opts = opts;
        if (!update) {
            riot.update();
        }

        return this;
    }
};

var VisMixin = {
    init: function init() {
        this.on('updated', function () {
            console.log('Visualization Updated!');
            componentHandler.upgradeDom();
            //window.componentHandler.upgradeDom();
            //riot.update();
        });
    },

    getOpts: function getOpts() {
        return this.opts;
    },

    setOpts: function setOpts(opts, update) {
        console.log('opts: ', opts);
        this.opts = opts;
        if (!update) riot.update();
        return this;
    }
};

var list = [{ link: '#scroll-tab-1', tab_title: 'test' }, { link: '#scroll-tab-2', tab_title: 'HOLA' }];

OptsMixin.setOpts(list, false);

riot.mixin('target', OptsMixin);
riot.mixin('vistest', VisMixin);

//import Reveal from 'reve';

// import * as d3 from 'd3';
// var d3 = require('d3')

// var route = require('riot-route');

// import '!style-loader!css-loader!/styles/material.teal-orange.min.css';
// import '!style-loader!css-loader!mdl-ext/lib/mdl-ext.min.css';
// var head = require('headjs');


document.addEventListener('DOMContentLoaded', function () {

    var mixinObject = null;
    riot.mount('main-ux');
    riot.mount('layout-drawer-ux');
    riot.mount('layout-tab-bar-ux');
    riot.mount('second-ux');
    riot.mount('header-ux');
    riot.mount('menu-ux');
    // riot.mount('chat-ux');
    riot.mount('datvis-ux');
    // riot.mount('test');
    riot.mount('webvr-ux');
    // riot.mount('map-ux');
    // riot.mount('couchdb-ux');
    // riot.mount('scanner-ux')
    riot.mount('uploadcv-ux');
    // riot.mount('uploadmodel-ux') // this is creating concurrency <<<<<
    riot.mount('signinpop-ux');
    riot.mount('marketdash-ux');
    riot.mount('reveal-ux');
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(66), __webpack_require__(11)))

/***/ }),

/***/ 147:
/***/ (function(module, exports, __webpack_require__) {

var riot = __webpack_require__(6);

riot.tag2('main-ux', '<h3>{opts.title}</h3> <ul> <li each="{items.filter(whatShow)}"> <label class="{completed: done}"> <input type="checkbox" checked="{done}" onclick="{parent.toggle}"> {title} </label> </li> </ul> <form onsubmit="{add}"> <input ref="input" onkeyup="{edit}"> <button disabled="{!text}">Add #{items.filter(whatShow).length + 1}</button> <button type="button" disabled="{items.filter(onlyDone).length == 0}" onclick="{removeAllDone}"> X{items.filter(onlyDone).length} </button> </form>', '', '', function(opts) {
    opts.title= 'I want to behave!';
    opts.items = [
        { title: 'Avoid excessive caffeine', done: true },
        { title: 'Hidden item',  hidden: true },
        { title: 'Be less provocative'  },
        { title: 'Be nice to people' }
      ]
    this.items = opts.items

    this.edit = function(e) {
      this.text = e.target.value
    }.bind(this)

    this.add = function(e) {
      if (this.text) {
        this.items.push({ title: this.text })
        this.text = this.refs.input.value = ''
      }
      e.preventDefault()
    }.bind(this)

    this.removeAllDone = function(e) {
      this.items = this.items.filter(function(item) {
        return !item.done
      })
    }.bind(this)

    this.whatShow = function(item) {
      return !item.hidden
    }.bind(this)

    this.onlyDone = function(item) {
      return item.done
    }.bind(this)

    this.toggle = function(e) {
      var item = e.item
      item.done = !item.done
      return true
    }.bind(this)
});

/***/ }),

/***/ 148:
/***/ (function(module, exports, __webpack_require__) {

var riot = __webpack_require__(6);

riot.tag2('second-ux', '<a class="mdl-navigation__link" href="{ele.link}" each="{ele in list}">{ele.menu_title}</a>', '', '', function(opts) {
                    this.list = {
                        first : {
                            link: '#hola',
                            menu_title: 'Hola'
                        },
                        second : {
                            link: '#chao',
                            menu_title: 'Chao'
                        }
                    }
});


/***/ }),

/***/ 149:
/***/ (function(module, exports, __webpack_require__) {

var riot = __webpack_require__(6);

riot.tag2('header-ux', '', '', '', function(opts) {
});

/***/ }),

/***/ 150:
/***/ (function(module, exports, __webpack_require__) {

var riot = __webpack_require__(6);

riot.tag2('menu-ux', '', '', '', function(opts) {
});

/***/ }),

/***/ 151:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(d3) {var riot = __webpack_require__(6);

riot.tag2('datvis-ux', '<meta charset="utf-8"> <div class="mdl-card__title"> <h2 class="mdl-card__title-text">Perfil</h2> </div> <figure class="mdl-card__media"> <svg width="364" height="364"></svg> </figure> <table class="mdl-data-table mdl-js-data-table"> <thead> <tr> <th class="mdl-data-table__cell--non-numeric">CLASIFICACION</th> </tr> </thead> <tbody> <tr each="{items.data.children}"> <td class="mdl-data-table__cell--non-numeric"><input type="checkbox" checked="{}" onclick="{}"> {name}</td> </tr> </tbody> </table> <div class="mdl-card__actions mdl-card--border"> <a id="getProfiles" class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect" onclick="{lovebadge}"> Get Profiles </a> <button id="demo-menu-top-right" class="mdl-button mdl-js-button mdl-button--icon mdl-button--mini-fab"> <i class="material-icons">mode_edit</i> </button> </div> <ul class="mdl-menu mdl-menu--top-right mdl-js-menu mdl-js-ripple-effect" data-mdl-for="demo-menu-top-right"> <li class="mdl-menu__item">Add</li> <li class="mdl-menu__item">Edit</li> <li disabled class="mdl-menu__item">Select</li> <li class="mdl-menu__item">Delete</li> </ul>', 'datvis-ux .node,[data-is="datvis-ux"] .node{ cursor: pointer; } datvis-ux .node:hover,[data-is="datvis-ux"] .node:hover{ stroke: #000; stroke-width: 1.5px; } datvis-ux .node--leaf,[data-is="datvis-ux"] .node--leaf{ fill: white; } datvis-ux .label,[data-is="datvis-ux"] .label{ font: 11px "Helvetica Neue", Helvetica, Arial, sans-serif; text-anchor: middle; text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, -1px 0 0 #fff, 0 -1px 0 #fff; } datvis-ux .label,[data-is="datvis-ux"] .label,datvis-ux .node--root,[data-is="datvis-ux"] .node--root,datvis-ux .node--leaf,[data-is="datvis-ux"] .node--leaf{ pointer-events: none; } datvis-ux .demo-card-wide > .mdl-card__title,[data-is="datvis-ux"] .demo-card-wide > .mdl-card__title{ color: #fff; height: 400px; } datvis-ux .mdl-button .material-icons,[data-is="datvis-ux"] .mdl-button .material-icons{ position: relative; right: 0px; top: 5px; } datvis-ux .mdl-card__title,[data-is="datvis-ux"] .mdl-card__title{ color: #fff; padding-top: 20px; padding-bottom: 20px; background: #009688; } datvis-ux .mdl-card__media,[data-is="datvis-ux"] .mdl-card__media{ margin: 0; } datvis-ux .mdl-card__actions .mdl-button .material-icons,[data-is="datvis-ux"] .mdl-card__actions .mdl-button .material-icons{ padding-right: 10px; } datvis-ux .mdl-data-table,[data-is="datvis-ux"] .mdl-data-table{ width: 100%; border-collapse: collapse; } datvis-ux tr,[data-is="datvis-ux"] tr{ text-align: left; } datvis-ux #demo-menu-top-right,[data-is="datvis-ux"] #demo-menu-top-right{ right: 0px; float:right; }', '', function(opts) {

items = { data: {children:[]}} ;
var GHModel001 = { json: { name: "CV", children: []} }

function update() {
  var svg = d3.select("svg"),
    margin = 20,
    diameter = +svg.attr("width"),
    g = svg.append("g").attr("transform", "translate(" + diameter / 2 + "," + diameter / 2 + ")");

var color = d3.scaleLinear()
    .domain([-1, 5])
    .range(["hsl(152,80%,80%)", "hsl(228,30%,40%)"])
    .interpolate(d3.interpolateHcl);

var pack = d3.pack()
    .size([diameter - margin, diameter - margin])
    .padding(2);

root  = GHModel001.json;

  root = d3.hierarchy(root)
      .sum(function(d) { return d.size; })
      .sort(function(a, b) { return b.value - a.value; });

  var focus = root,
      nodes = pack(root).descendants(),
      view;

  var circle = g.selectAll("circle")
    .data(nodes)
    .enter().append("circle")
      .attr("class", function(d) { return d.parent ? d.children ? "node" : "node node--leaf" : "node node--root"; })
      .style("fill", function(d) { return d.children ? color(d.depth) : null; })
      .on("click", function(d) {
        if (focus !== d) zoom(d), d3.event.stopPropagation();
      });

  var text = g.selectAll("text")
    .data(nodes)
    .enter().append("text")
      .attr("class", "label")
      .style("fill-opacity", function(d) { return d.parent === root ? 1 : 0; })
      .style("display", function(d) { return d.parent === root ? "inline" : "none"; })
      .text(function(d) { return d.data.name; });

  var node = g.selectAll("circle,text");

  svg
      .style("background", color(-1))
      .on("click", function() {
        var selectedList = [];
        zoom(root, selectedList);
      });

  zoomTo([root.x, root.y, root.r * 2 + margin]);

  function zoom(d) {
    items = d;
    riot.update();
    var focus0 = focus; focus = d;
    var transition = d3.transition()
        .duration(d3.event.altKey ? 7500 : 750)
        .tween("zoom", function(d) {
          var i = d3.interpolateZoom(view, [focus.x, focus.y, focus.r * 2 + margin]);
          return function(t) { zoomTo(i(t)); };
        });

    transition.selectAll("text")
      .filter(function(d) { return d.parent === focus || this.style.display === "inline"; })
        .style("fill-opacity", function(d) { return d.parent === focus ? 1 : 0; })
        .on("start", function(d) {
          if (d.parent === focus) {
            this.style.display = "inline";

          }
        })
        .on("end", function(d) { if (d.parent !== focus) this.style.display = "none";

            });
  }

  function zoomTo(v) {
    var k = diameter / v[2]; view = v;
    node.attr("transform", function(d) { return "translate(" + (d.x - v[0]) * k + "," + (d.y - v[1]) * k + ")"; });
    circle.attr("r", function(d) { return d.r * k; });
  }
}

this.on('before-mount', function() {

    riot.DATA.on('receivedDoc', function(doc) {
      this.doc = doc;
      console.log('Received Doc: ',this.doc)

      if (this.doc.entities) {

            d3.hierarchy(this.doc.entities)
                        .each(function (d) {

                            for (entity in d.data) {
                                GHModel001.json["children"].push({ "name" : d.data[entity].text, "children":[{ "name": d.data[entity].text, "size": 10 }]} )
                            }

                        })

        update();
        riot.update();
      }
    })

})

this.on('updated', function() {

})

this.on('mount', function(e) {

var GHModel000 = {
  "json" : {
    "name" : "Nube",
    "children" : [
      {
        "name" : "Cloud",
        "children" : [
          {
            "name" : "Amazon WS", "size" : 354.4
          },
          {
            "name" : "Google Cloud", "size" : 354.4
          },
          {
            "name" : "Heroku", "size" : 354.4
          }
        ]
      },
      {
        "name": "FullStack",
        "children": [
          {
            "name" : "Firebase", "size" : 354.4
          },
                    {
            "name" : "NPM", "size" : 354.4
          }
        ]

      },
      {
        "name": "Mobile",
        "children": [
          {
            "name" : "iOS", "size" : 354.4,
        "children": [
          {
            "name" : "Geolocation", "size" : 354.4
          },
          {
            "name" : "Virtual Reality", "size" : 354.4
          }
        ]
          },
          {
            "name" : "Android", "size" : 354.4,
        "children": [
          {
            "name" : "Geolocation", "size" : 354.4
          },
          {
            "name" : "Virtual Reality", "size" : 354.4
          },
          {
            "name" : "OAuth", "size" : 354.4
          }
        ]
          }
        ]

      }

    ]
  }
}

})

this.lovebadge = function(e) {

  console.log(GHModel000);
}.bind(this)

});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(50)))

/***/ }),

/***/ 152:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(Detector, THREE) {/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12);
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
var riot = __webpack_require__(6);


riot.tag2('webvr-ux', '', 'webvr-ux { height: 100%; padding-bottom: 0; width: 432.5; } webvr-ux body,[data-is="webvr-ux"] body{ margin:0; padding:0; } webvr-ux #webgl,[data-is="webvr-ux"] #webgl{ top:0; bottom:0; width:100%; }', '', function(opts) {
console.log('THREE', three__WEBPACK_IMPORTED_MODULE_0__["STLLoader"])
this.on('mount', function(e) {
			if ( ! Detector.webgl ) Detector.addGetWebGLMessage();
			var container, stats;
			var camera, cameraTarget, scene, renderer;
            var card_size = { height: 300, width : 432.5 };
            var rootdoc = this.root;
            console.log('out init : ',rootdoc);
			init();
			animate();

			function init() {
				container = document.createElement( 'div' );
                container.setAttribute('id', 'webgl-canvas');
                container.setAttribute('style', 'top:0; left: 0 ;width:100%;height:100%;')
                console.log('in init : ',rootdoc)

                rootdoc.appendChild(container);
				camera = new THREE.PerspectiveCamera( 20, card_size.width/card_size.height, 1, 15 );
				camera.position.set( 3, -0.5, 6 );

				scene = new THREE.Scene();
				scene.fog = new THREE.Fog( 0x72645b, 2, 15 );

				var plane = new THREE.Mesh(
					new THREE.PlaneBufferGeometry( 40, 40 ),
					new THREE.MeshPhongMaterial( { color: 0x999999, specular: 0x101010 } )
				);
				plane.rotation.x = -Math.PI/2;
				plane.position.y = -0.5;
				scene.add( plane );
				plane.receiveShadow = true;

				var loader = new THREE.STLLoader();
				loader.load( './data/parametric003.stl', function ( geometry ) {
					var material = new THREE.MeshPhongMaterial( { color: 0xff5533, specular: 0x111111, shininess: 200 } );
					var mesh = new THREE.Mesh( geometry, material );
					mesh.position.set( 0, - 0.5, 0 );
					mesh.rotation.set( - Math.PI / 2, 0, 0 );
					mesh.scale.set( 0.3, 0.3, 0.3 );
					mesh.castShadow = true;
					mesh.receiveShadow = true;
					scene.add( mesh );
				} );

				scene.add( new THREE.HemisphereLight( 0x443333, 0x111122 ) );
				addShadowedLight( 1, 1, 1, 0xffffff, 1.35 );
				addShadowedLight( 0.5, 1, -1, 0xffaa00, 1 );

				renderer = new THREE.WebGLRenderer( { antialias: true } );
                renderer.domElement.setAttribute('style', 'top:0; left: 0 ;width:100%;height:100%;')
				renderer.setClearColor( scene.fog.color );
				renderer.setPixelRatio( window.devicePixelRatio );

                renderer.setSize( card_size.width, card_size.height );
				renderer.gammaInput = true;
				renderer.gammaOutput = true;
				renderer.shadowMap.enabled = true;
				renderer.shadowMap.renderReverseSided = false;
                cameraControls = new THREE.OrbitControls(camera, renderer.domElement);
				cameraControls.target.set( 0, 0.25, 0);
				cameraControls.maxDistance = 100;
				cameraControls.minDistance = 1;
				cameraControls.update();
				container.appendChild( renderer.domElement );

				window.addEventListener( 'resize', onWindowResize, false );
			}
			function addShadowedLight( x, y, z, color, intensity ) {
				var directionalLight = new THREE.DirectionalLight( color, intensity );
				directionalLight.position.set( x, y, z );
				scene.add( directionalLight );
				directionalLight.castShadow = true;
				var d = 1;
				directionalLight.shadow.camera.left = -d;
				directionalLight.shadow.camera.right = d;
				directionalLight.shadow.camera.top = d;
				directionalLight.shadow.camera.bottom = -d;
				directionalLight.shadow.camera.near = 1;
				directionalLight.shadow.camera.far = 4;
				directionalLight.shadow.mapSize.width = 1024;
				directionalLight.shadow.mapSize.height = 1024;
				directionalLight.shadow.bias = -0.005;
			}
			function onWindowResize() {
				camera.aspect = card_size.width/card_size.height;
				camera.updateProjectionMatrix();

                renderer.setSize( card_size.width, card_size.height );
			}
			function animate() {
				requestAnimationFrame( animate );
				render();

			}
			function render() {
				var timer = Date.now() * 0.0005;

                cameraControls.update();
				renderer.render( scene, camera );
			}

})
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(73), __webpack_require__(12)))

/***/ }),

/***/ 153:
/***/ (function(module, exports, __webpack_require__) {

var riot = __webpack_require__(6);

riot.tag2('layout-tab-bar-ux', '<div class="mdl-textfield mdl-js-textfield mdl-textfield--expandable"> <label class="mdl-button mdl-js-button mdl-button--icon" for="sample6"> <i class="material-icons">add</i> </label> <div class="mdl-textfield__expandable-holder"> <input class="mdl-textfield__input" type="text" id="sample6" onkeydown="{prevent}"> <label class="mdl-textfield__label" for="sample-expandable">Expandable Input</label> </div> </div> <div class="mdl-layout-spacer"></div>', '', 'id="app_tabs" class="mdl-tabs__tab-bar mdl-js-ripple-effect"', function(opts) {


    this.menu = []

    this.on('before-mount', function() {
        this.mixin('target');

    })

    this.on('mount', function() {

        for (opt in this.opts) {

            add_Tab(this.opts[opt], this.menu, document.querySelector('#app_tabs'))
        }
    })

    function add_Tab(opt, list, node) {

        var tab = document.createElement('a');
        var span1 = document.createElement('span');
        span1.className = 'mdl-layout__tab-ripple-container mdl-js-ripple-effect';
        var span2 = document.createElement('span');
        span2.className = 'mdl-ripple is-animating';
        tab.href = '#scroll-tab-'+list.length;
        var textNode = document.createTextNode(opt.tab_title);

        tab.appendChild(textNode);
        tab.className = 'mdl-layout__tab ';
        node.className = 'mdl-layout__tab-bar mdl-js-ripple-effect';

        node.appendChild(tab);
        console.log(this)

        list.push(opt)
    }

    this.prevent = function(e) {
        if(event.keyCode == 13) {

            var opt = {link:'#scroll-tab-'+(this.opts.length+1), tab_title:e.srcElement.value};
            add_Tab(opt, this.opts, document.querySelector('#app_tabs'))

        }
    }.bind(this);
});

/***/ }),

/***/ 154:
/***/ (function(module, exports, __webpack_require__) {

var riot = __webpack_require__(6);

riot.tag2('layout-drawer-ux', '<div id="user-container"> <div class="mdl-layout-spacer"></div> <div hidden id="user-pic"></div> <span><div hidden id="user-name" class="mdl-color-text--white"></div></span> <button hidden id="sign-in" class="mdl-button mdl-js-button mdl-js-ripple-effect mdl-color-text--white"> <i class="material-icons">account_circle</i>Sign-in </button> <div class="mdl-layout-spacer"></div> </div> <nav class="mdl-navigation "> <a class="mdl-navigation__link" href="{ele.link}" each="{ele in list}">{ele.title}</a> </nav> <div class="mdl-layout-spacer"></div> <nav class="mdl-navigation "> <div class="mdl-layout-spacer"></div> <a class="mdl-navigation__link" href="{ele.link}" each="{ele in aspects}"><p>{ele.title}</p></a> <div id="signing-buttons" class="mdl-navigation "> <button hidden id="sign-out" class="mdl-button mdl-js-button mdl-js-ripple-effect mdl-color-text--blue"> Sign-out </button> </div> </nav> <div id="signing-buttons"> <button hidden id="sign-out" class="mdl-button mdl-js-button mdl-js-ripple-effect mdl-color-text--blue"> Sign-out </button> </div>', 'layout-drawer-ux #user-container,[data-is="layout-drawer-ux"] #user-container{ position: relative; display: flex; flex-direction: row; top: 0px; width: 100%; right: 0; padding-left: 10px; justify-content: flex-end; padding-right: 10px; } layout-drawer-ux #user-container #user-pic,[data-is="layout-drawer-ux"] #user-container #user-pic{ top: -3px; position: relative; display: inline-block; background-image: url(\'/images/profile_placeholder.png\'); background-repeat: no-repeat; width: 40px; height: 40px; background-size: 40px; border-radius: 20px; } layout-drawer-ux #user-container #user-name,[data-is="layout-drawer-ux"] #user-container #user-name{ font-size: 16px; line-height: 36px; padding-right: 10px; padding-left: 20px; } layout-drawer-ux #user-container,[data-is="layout-drawer-ux"] #user-container{ top: 5px; background-color: #E52503; height: 38px; padding-top: 3px; padding-right: 2px; } layout-drawer-ux #user-container #user-pic,[data-is="layout-drawer-ux"] #user-container #user-pic{ top: 2px; width: 33px; height: 33px; background-size: 33px; } layout-drawer-ux #signing-buttons,[data-is="layout-drawer-ux"] #signing-buttons{ position: static; padding-left: 10px; padding-right: 10px; }', 'class="mdl-layout__drawer"', function(opts) {
        this.aspects = {
            PPolicy: {
                link: 'privacy_policy.html',
                title: 'Privacy Policy'
            }
        }
});

/***/ }),

/***/ 155:
/***/ (function(module, exports, __webpack_require__) {

var riot = __webpack_require__(6);

riot.tag2('uploadcv-ux', '<div class="mdl-card__title"> <h2 class="mdl-card__title-text">Upload CV</h2> </div> <div class="mdl-card__actions mdl-card--border"> <p>Sube tu Curriculum en formato PDF</p> <progress value="0" max="100" style="width:100%" id="cv_uploader">0%</progress> <p></p> <div class="upload-btn-wrapper"> <button class="btn">Sube tu CV</button> <input type="file" value="upload" id="fileButton"> </div> </div> <ul class="mdl-menu mdl-menu--top-right mdl-js-menu mdl-js-ripple-effect" data-mdl-for="demo-menu-top-right"> <li class="mdl-menu__item">Add</li> <li class="mdl-menu__item">Edit</li> <li disabled class="mdl-menu__item">Select</li> <li class="mdl-menu__item">Delete</li> </ul>', 'uploadcv-ux .demo-card-wide > .mdl-card__title,[data-is="uploadcv-ux"] .demo-card-wide > .mdl-card__title{ color: #fff; height: 400px; } uploadcv-ux .mdl-button .material-icons,[data-is="uploadcv-ux"] .mdl-button .material-icons{ position: relative; right: 0px; top: 5px; } uploadcv-ux .mdl-card__title,[data-is="uploadcv-ux"] .mdl-card__title{ color: #fff; padding-top: 20px; padding-bottom: 20px; background: #009688; } uploadcv-ux .mdl-card__media,[data-is="uploadcv-ux"] .mdl-card__media{ margin: 0; } uploadcv-ux .mdl-card__actions .mdl-button .material-icons,[data-is="uploadcv-ux"] .mdl-card__actions .mdl-button .material-icons{ padding-right: 10px; } uploadcv-ux .mdl-data-table,[data-is="uploadcv-ux"] .mdl-data-table{ width: 100%; border-collapse: collapse; } uploadcv-ux tr,[data-is="uploadcv-ux"] tr{ text-align: left; } uploadcv-ux #demo-menu-top-right,[data-is="uploadcv-ux"] #demo-menu-top-right{ right: 0px; float:right; } uploadcv-ux .upload-btn-wrapper,[data-is="uploadcv-ux"] .upload-btn-wrapper{ position: relative; overflow: hidden; display: inline-block; } uploadcv-ux .btn,[data-is="uploadcv-ux"] .btn{ border: 2px; border-style: solid; border-color: #009688; color: #009688; background-color: white; padding: 8px 20px; border-radius: 8px; font-size: 20px; font-weight: bold; } uploadcv-ux .upload-btn-wrapper input[type=file],[data-is="uploadcv-ux"] .upload-btn-wrapper input[type=file]{ font-size: 100px; position: absolute; left: 0; top: 0; opacity: 0; }', '', function(opts) {


this.lovebadge = function(e) {

  console.log('click');
}.bind(this)

this.on('mount', function() {

})

});

/***/ }),

/***/ 156:
/***/ (function(module, exports, __webpack_require__) {

var riot = __webpack_require__(6);

riot.tag2('signinpop-ux', '<img id="signinpop-img" alt="Sign in with Google" src="images/btn_google_signin_light_normal_web.png"> <p>By connecting with your Google account you are accepting our <a href="/privacy_policy.html">Privacy Policy.</a></p>', 'signinpop-ux img,[data-is="signinpop-ux"] img{ vertical-align: middle; top:50%; }', '', function(opts) {
});

/***/ }),

/***/ 157:
/***/ (function(module, exports, __webpack_require__) {

var riot = __webpack_require__(6);

riot.tag2('marketdash-ux', '<div class="mdl-textfield mdl-js-textfield mdl-textfield--expandable"> <label class="mdl-button mdl-js-button mdl-button--icon" for="sample6"> <i class="material-icons">search</i> </label> <div class="mdl-textfield__expandable-holder"> <input class="mdl-textfield__input" type="text" id="sample6" onkeydown="{prevent}"> <label class="mdl-textfield__label" for="sample-expandable">Expandable Input</label> </div> </div> <span class="mdl-chip" each="{chip, skill in skills}" if="(" skills length> 0)> <span class="mdl-chip__text">{chip}</span> </span>', 'marketdash-ux #add,[data-is="marketdash-ux"] #add{ position: absolute; right: 40px; top: 36px; z-index: 999; } marketdash-ux #search_button,[data-is="marketdash-ux"] #search_button{ position: absolute; right: 55px; top: 36px; z-index: 999; } marketdash-ux .mdl-textfield,[data-is="marketdash-ux"] .mdl-textfield{ padding: 24px; flex: none; } marketdash-ux .search,[data-is="marketdash-ux"] .search{ border-radius: 15px; border: 1px #000 solid; position: absolute; right: 55px; top: 36px; z-index: 999; width: 75px; -webkit-transition: all .5s ease; -moz-transition: all .5s ease; transition: all .5s ease; } marketdash-ux .search:focus,[data-is="marketdash-ux"] .search:focus{ width: 200px; } marketdash-ux .mdl-chip,[data-is="marketdash-ux"] .mdl-chip{ margin: 3px; }', 'class="mdl-tabs mdl-js-tabs marketdash"', function(opts) {

    this.skills = [
        'JavaScript',
        'Java'
    ]

    this.on('mount', function(event) {
        this.prevent = function(e) {
            if( e.keyCode > 32 && e.keyCode < 91) {
                var opt = {searchfield:e.srcElement.value+e.key};

                console.log(opt)
                console.log(e)
            } else {
                console.log("pressed ",e.keyCode)
                if (e.keyCode == 13 || e.keyCode == 8) {
                    console.log(e.key)
                }
            }
            if (opt) {
                return riot.DATA.trigger("query", opt)
            }
        }
        riot.DATA.on("searchResponse", function (res) {
            console.log("market query response : ", res)
        })
    })
});

/***/ }),

/***/ 158:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(Blockly, esprima, treeify, d3, reve, reveclient, marked, markdown, notes, zoom, highlight) {/* harmony import */ var _style_loader_css_loader_mdl_material_min_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(168);
/* harmony import */ var _style_loader_css_loader_mdl_material_min_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_css_loader_mdl_material_min_css__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_css_loader_reve_css_reveal_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(171);
/* harmony import */ var _style_loader_css_loader_reve_css_reveal_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_css_loader_reve_css_reveal_css__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_css_loader_reve_css_theme_black_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(173);
/* harmony import */ var _style_loader_css_loader_reve_css_theme_black_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_css_loader_reve_css_theme_black_css__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_css_loader_reve_lib_css_zenburn_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(185);
/* harmony import */ var _style_loader_css_loader_reve_lib_css_zenburn_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_css_loader_reve_lib_css_zenburn_css__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var headjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79);
/* harmony import */ var headjs__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(headjs__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12);
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_5__);
var riot = __webpack_require__(6);







riot.tag2('reveal-ux', '<div class="reveal"> <div class="slides"> <section> <h1>Dr. Strange Function</h1> <h4>O cómo aprendí a dejar de preocuparme y amar la<mark class="fragment fade-left"> asincronia .</mark></h4> <img src="images/slides/sscala001/gyroid000.png" width="50%" height="50%"> <social> <pre>#sscala</pre> <pre>github.com/santiagoscala</pre> </social> <aside class="notes"> Probando las notas </aside> </section> <section> <h1>Dr. Strange Function</h1> <h4>O cómo aprendí a dejar de preocuparme y amar la<mark> asincronia .</mark></h4> <img src="images/slides/sscala001/gyroid001.png" width="50%" height="50%"> <social> <pre>#sscala</pre> <pre>github.com/santiagoscala</pre> <pre>diego.correa@ikkuna.io</pre> </social> </section> <section> <h1>Dr. Strange Function</h1> <h4>O cómo aprendí a dejar de preocuparme y amar la<mark> asincronia .</mark></h4> <img src="images/slides/sscala001/gyroid002.png" width="50%" height="50%"> <social> <pre>#sscala</pre> <pre>github.com/santiagoscala</pre> </social> </section> <section> érase una vez ... <pre><code>() => \\{ \\}</code></pre> <p class="fragment fade-left">...fin</p> <aside class="notes"> Variables (funciones) implicitas </aside> </section> <section> <section each="{scalajs}"> {topic} <div class="comparison"> <div class="javascript"> <pre class="language">ES6<code class="javascript">{js}</code>\n                            </pre> </div> <div class="scala"> <pre class="language">Scala<code class="scala">{scala} </code>\n                            </pre> </div> </div> </section> </section> <section> <section each="{examples}" id="{id}"> <aside class="notes"> <p>{aside}</p> </aside> <div class="editor-area"> <div id="mySidenav" class="sidenav"> <span class="drawerbtn" onclick="{openNav}"></span> <pre class="htmlBox language" placeholder="HTML">html<code data-trim data-noescape contenteditable="true" class="html">{html}</code></pre> <pre class="cssBox language" placeholder="CSS">css<code data-trim data-noescape contenteditable="true" class="css">{css}</code></pre> </div> <pre class="jsBox" placeholder="JavaScript"><code data-trim data-noescape contenteditable="true" class="javascript">{js}</code></pre> </div> <iframe class="code"> <body></body> <head></head> </iframe> </section> </section> <section> <div class="gracias"> <p>Gracias</p> <p>diego.correa@ikkuna.io</p> </div> <social> <pre>#sscala</pre> <pre>github.com/santiagoscala</pre> <pre>diego.correa@ikkuna.io</pre> </social> </section> </div> </div>', 'reveal-ux section,[data-is="reveal-ux"] section{ top: 0px !important; display:block; height: 100%; } reveal-ux mark,[data-is="reveal-ux"] mark{ background: orange; color: black; } reveal-ux social,[data-is="reveal-ux"] social{ position: absolute; bottom: 120px; left: 15px; margin-bottom: 10 px; margin-left: 10px; font-size: 46px; } reveal-ux textarea,[data-is="reveal-ux"] textarea{ width: 100%; height:100%; float: top; min-height: 150px; overflow: scroll; margin: auto; display: inline-block; background: #F4F4F9; outline: none; font-family: Courier, sans-serif; font-size: 22px; } reveal-ux iframe,[data-is="reveal-ux"] iframe{ background:white; bottom: 0; position: relative; width: 100%; height: 90%; background:rgba(0,0,0,0); } reveal-ux .editor-area,[data-is="reveal-ux"] .editor-area{ grid-template-columns: 4% 95%; } reveal-ux .htmlBox,[data-is="reveal-ux"] .htmlBox{ position: sticky; width: 100%; height: 30%; overflow-x: hidden; text-overflow: clip; padding-right: 12px; right: 12px; } reveal-ux .cssBox,[data-is="reveal-ux"] .cssBox{ position: sticky; width: 100%; height: 30%; text-overflow: clip; padding-right: 12px; right: 12px; } reveal-ux .jsBox,[data-is="reveal-ux"] .jsBox{ width: 95%; height: 100%; text-overflow: clip; } reveal-ux .prevWork,[data-is="reveal-ux"] .prevWork{ display: grid; grid-gap: 0; grid-template-columns: repeat(9, 10%); grid-template-rows: repeat(4, 100px); position: relative; height: 100%; background: black; } reveal-ux .prev-item,[data-is="reveal-ux"] .prev-item{ position: relative; object-fit: scale-down; height: 100%; background: black; background-color: black; } reveal-ux .prev-item img,[data-is="reveal-ux"] .prev-item img{ position: relative; top: 0; left: 0; object-fit: scale-down; width: 100%; border: 0 !important; background-color: black; background: black; -webkit-transition: all .3s ease-in-out; -moz-transition: all .3s ease-in-out; -o-transition: all .3s ease-in-out; transition: all .3s ease-in-out; } reveal-ux .prev-item img:hover,[data-is="reveal-ux"] .prev-item img:hover{ z-index:100; -webkit-transform: scale(2.5); -moz-transform: scale(2.5); -ms-transform: scale(2.5); -o-transform: scale(2.5); transform: scale(2.5); -webkit-transition: all 0.3s ease-in-out; } reveal-ux .grid4x1,[data-is="reveal-ux"] .grid4x1{ right:15px; display: grid; grid-gap: 0; grid-template-columns: repeat(1, 10%); grid-template-rows: repeat(4, 100px); position: relative; height: 100%; } reveal-ux .brio-item,[data-is="reveal-ux"] .brio-item{ position: relative; top: 0; left: 75%; object-fit: scale-down; width: 100%; border: 0 !important; } reveal-ux .grid2x2,[data-is="reveal-ux"] .grid2x2{ right:15px; display: grid; grid-gap: 0; grid-template-columns: repeat(2, 10%); grid-template-rows: repeat(2, 100px); position: relative; height: 100%; } reveal-ux .center-item,[data-is="reveal-ux"] .center-item{ position: absolute; top: 60%; object-fit: scale-down; width: 40%; border: 0 !important; } reveal-ux .center-item img,[data-is="reveal-ux"] .center-item img{ border:0; } reveal-ux .right-item,[data-is="reveal-ux"] .right-item{ position: absolute; top: 60%; left: 45%; object-fit: scale-down; width: 40%; border: 0 !important; } reveal-ux .right-item img,[data-is="reveal-ux"] .right-item img{ border:0; } reveal-ux .right-item p,[data-is="reveal-ux"] .right-item p{ top: 30px; font-size: 44px; } reveal-ux .comparison,[data-is="reveal-ux"] .comparison{ display: grid; padding-left: 5% !important; height: 100%; width: 90%; grid-gap: 2%; grid-template-columns: 49% 49%; } reveal-ux .comparison .language,[data-is="reveal-ux"] .comparison .language{ font-size: 30px; } reveal-ux .comparison .javascript,[data-is="reveal-ux"] .comparison .javascript{ grid-column: 1; font-size: 25px; } reveal-ux .comparison .scala,[data-is="reveal-ux"] .comparison .scala{ grid-column: 2; font-size: 25px; } reveal-ux .comparison pre,[data-is="reveal-ux"] .comparison pre{ margin: 0; width: 100%; } reveal-ux .comparison code,[data-is="reveal-ux"] .comparison code{ padding: 5 !important; width: 100% !important; height: 100%; } reveal-ux .sidenav,[data-is="reveal-ux"] .sidenav{ position:fixed; height: 100%; width: 6px; position: fixed; z-index: 1000; top: 0; left: 0; background-color: rgba(0,0,0,0); overflow-y: hidden; overflow-x: hidden; padding-top: 0px; transition: 0.5s; } reveal-ux .sidenav a,[data-is="reveal-ux"] .sidenav a{ padding: 8px 8px 8px 32px; text-decoration: none; font-size: 25px; color: #818181; display: block; transition: 0.3s; } reveal-ux .sidenav a:hover,[data-is="reveal-ux"] .sidenav a:hover{ color: #f1f1f1; } reveal-ux .sidenav .drawerbtn,[data-is="reveal-ux"] .sidenav .drawerbtn{ position: absolute; top: 0px; right: 0px; width: 4px; height: 5px; padding: 0px; color: brown; z-index: 1002; border: 1px solid grey; font-size: 11px; } reveal-ux pre,[data-is="reveal-ux"] pre{ border: 0px; box-shadow: none !important; } reveal-ux .gracias,[data-is="reveal-ux"] .gracias{ font-size: 105px; } reveal-ux .gracias p,[data-is="reveal-ux"] .gracias p{ font-size: 105px; } reveal-ux .gracias pre,[data-is="reveal-ux"] .gracias pre{ font-size: 105px; }', '', function(opts) {


    var drawerflag = 0;
    this.openNav = function(e) {
        console.log('open event on',e)

        var ele =  e.target.parentNode.style;
        if (drawerflag) {
            ele.width = "6px";
            ele.background = "rgba(0,0,0,0)";
        } else {
            ele.width = "90%";
            ele.background = "rgba(0,0,0,0.9)";
        }
        drawerflag = !drawerflag;
    }.bind(this)

    this.closeNav = function(e) {
        console.log('close event')

    }.bind(this)

    this.scalajs = []

    this.scalajs.push({
        topic: 'Variables',
        js: `// mutable variable
let x = 5;
// immutable variable
const y = "Constant";`,
        scala: `// mutable variable
var x = 5
// immutable variable
val y = "Constant"`
    })
    this.scalajs.push({
        topic: 'Primitive types',
        js: `const x = 5 / 3; // == 1.6666666666666667`,
        scala: `val x = 5 / 3 // == 1
val y = 5.0 / 3 // == 1.6666666666666667
val z = 5 / 3.0 // == 1.6666666666666667`
    })
    this.scalajs.push({
        topic: 'Functions',
        js: `function mult(x, y) {
  return x * y;
}`,
        scala: `def mult(x: Double, y: Double): Double = x * y`
    })
    this.scalajs.push({
        topic: 'Anonymous functions',
        js: `const f = (x, y) => x + y;

const p = ["Fox", "jumped", "over", "me"];
const l = p.map(s => s.length)
  .reduce((a, b) => a + b, 0); // == 15`,
        scala: `val f = (x: Double, y: Double) => x + y

val p = Array("Fox", "jumped", "over", "me")
val l = p.map(s => s.length)
  .foldLeft(0)((a, b) => a + b) // == 15`
    })
    this.scalajs.push({
        topic: 'Default, named and rest parameters',
        js: `// default value
function mult(x, y = 42.0) {
  return x * y;
}

// variable number of parameters
function sum(...args) {
  return args.reduce((a, b) => a + b, 0);
}

const s = sum(5, 4, 3, 2, 1); // == 15

// named parameters
function vec({x = 0, y = 0, z = 0}) {
  return new Vec(x, y, z);
}

const v = vec({x: 8, z: 42}); // Vec(8, 0, 42)`,
        scala: `// default value
def mult(x: Double, y: Double = 42.0): Double =
  x * y

// variable number of parameters
def sum(args: Double*): Double =
  args.foldLeft(0.0)((a, b) => a + b)

val s = sum(5, 4, 3, 2, 1) // == 15

// named parameters (works directly)
def vec(x: Int = 0, y: Int = 0, z: Int = 0): Vec =
  new Vec(x, y, z)

val v = vec(8, z = 42) // Vec(8, 0, 42)`
    })

this.scalajs.push({
        topic: 'if, while, for, match control structures',
        js: `const res = (name === "") ? 0 : 1;`,
        scala: `val res = if (name == "") 0 else 1`
    })

    this.scalajs.push({
        topic: 'Classes',
        js: `class Shape {
  constructor(x, y) {
    this.x = x;
    this.y = y;
  }

  move(dx, dy) {
    this.x += dx;
    this.y += dy;
  }

  draw() {
    console.log('Shape at ${this.x}, ${this.y}');
  }
};

class Circle extends Shape {
  constructor(x, y, r) {
    super(x, y);
    this.r = r;
  }

  draw() {
    console.log('Circle at ${this.x}, ${this.y} with radius ${this.r}');
  }
}

const c = new Circle(5, 5, 42);
const r = c.r; // == 42`,
        scala: `// use var to make coordinates mutable
abstract class Shape(var x: Int, var y: Int) {
  def move(dx: Int, dy: Int): Unit = {
    x += dx
    y += dy
  }

  def draw(): Unit = {
    println(s"Shape at $x, $y")
  }
}

// r is immutable but accessible outside the class
class Circle(x: Int, y: Int, val r: Int)
    extends Shape(x, y) {
  override def draw(): Unit = {
    println(s"Circle at $x, $y with radius $r")
  }
}

val c = new Circle(5, 5, 42)
val r = c.r // == 42`
    })

    this.examples = [];

    this.examples.push({
        id:'samp1',
        aside: `var id = () => {};
var comp = id => id => id => id => id;

debug.log((comp)(10)(20)(30)(40));`,
        topic: 'sample 1',
        html: `<div class="container">
  <pre>result: <br><debug>...pensando...</debug> </pre>
</div>` ,
        css: `.container {
    margin: auto;
    padding: 2%;
    width: 94%;
    font-size: 48px;
    color: white;
}
debug {
    font-size: 28px;
}
`,
        js: `debug.log('Hola Mundo');`
    })

    this.examples.push({
        id: 'samp2',
        topic: 'sample 2',
        html:
`<div id='container'>
<svg width='720' height='120'>
</svg>
</div>`,
        css: `#container {
    padding: 0;
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: 100%;
    height: 60%;
}`,
        js: `var d3 = parent.d3;
var element = document.getElementsByTagName('svg');

var svg = d3.select(element[0]);
svg.append('circle').attr('cx',5).attr('cy',5).attr('r',5);
var circle = svg.selectAll('circle').style('fill', 'white');

circle.style('fill', 'orange')
  .attr('r', function() {
    return 5;
  });`
    })

    this.examples.push({
        id:'samp3',
        topic:'sample 3',
html: `<div id="wrapper">
  </div>

  <div class="menu">
    <button onClick="sort();">Sort</button>
  </div>`,
css: `  .person {
    height: 20px;
    position: relative;
  }
  .person .label {
    width: 90px;
    text-align: right;
    color: white;
  }
  .person .bar {
    height: 19px;
    background-color: steelblue;
    position: absolute;
    left: 100px;
  }
  .person div {
    display: inline-block;
  }
  .menu {
    margin-top: 20px;
  }`,
js: `var d3 = parent.d3;
var selection = document.getElementById('wrapper');

myData = [
  {
    "name": "Andy",
    "score": 37
  },
  {
    "name": "Beth",
    "score": 39
  },
  {
    "name": "Craig",
    "score": 31
  },
  {
    "name": "Diane",
    "score": 35
  },
  {
    "name": "Evelyn",
    "score": 38
  }
];

var barWidth = 400;
var barScale = d3.scaleLinear().domain([0, 100]).range([0, barWidth]);

var u = d3.select(selection)
  .selectAll('.person')
  .data(myData);

var entering = u.enter()
  .append('div')
  .classed('person', true);

entering.append('div')
  .classed('label', true)
  .text(function(d) {
    return d.name;
  });

entering.append('div')
  .classed('bar', true)
  .style('width', function(d) {
    return barScale(d.score) + 'px';
  });

function sort() {
console.log('touch')
 d3.select(selection).selectAll('.person')
    .sort(function(a, b) {
      return b.score - a.score;
    });
}`
    })

    this.examples.push({
        id:'samp4',
        topic:'sample 4',
        html:`<svg>
</svg>
<div class="container">
  <pre>result: <br><debug>...pensando...</debug> </pre>
</div>`,
        css:`svg {
 width: 100%;
 height: 100%;
}
.container {
    margin: auto;
    padding: 2%;
    width: 94%;
    font-size: 48px;
    color: white;
}
debug {
    font-size: 28px;
}`,
        js:`var d3 = parent.d3;
var element = document.getElementsByTagName('svg');
var svg = d3.select(element[0]);
d3.tsv("/images/slides/sscala001/s1.txt", function(data) {
debug.log(data.map( x => svg.append('circle').style('fill', 'white').attr('cx',(x['s1'].split('   ')[2]*5/10000)).attr('cy',(x['s1'].split('   ')[1]*5/10000)).attr('r',0.1) ))
});
var element = document.getElementsByTagName('svg');

//svg.append('circle').attr('cx',5).attr('cy',5).attr('r',5);

//var circle = svg.selectAll('circle').style('fill', 'white');

circle.style('fill', 'orange')
  .attr('r', function() {
    return 5;
  });`
    })

    this.examples.push( {
        id:'samp5',
        topic:'sample 5',
        html: `<debug></debug>
<div id='container'>
</div>`,
        css: `debug {
 color: white;
}`,
        js:`var THREE = parent.THREE;
var renderer = new THREE.WebGLRenderer();
renderer.setSize( window.innerWidth, window.innerHeight );
document.body.appendChild( renderer.domElement );

var camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 500 );
camera.position.set( 0, 0, 100 );
camera.lookAt( new THREE.Vector3( 0, 0, 0 ) );

var scene = new THREE.Scene();
var material = new THREE.LineBasicMaterial( { color: 0x0000ff } );
var geometry = new THREE.Geometry();
geometry.vertices.push(new THREE.Vector3( -10, 0, 0) );
geometry.vertices.push(new THREE.Vector3( 0, 10, 0) );
geometry.vertices.push(new THREE.Vector3( 10, 0, 0) );
var line = new THREE.Line( geometry, material );
scene.add( line );
renderer.render( scene, camera );`
    })

    window.Blockly = Blockly;
    window.THREE = three__WEBPACK_IMPORTED_MODULE_5__;
    window.esprima = esprima;
    window.treeify = treeify;
    window.d3 = d3;

    function compile(html, css, js, iframe) {
        var code = iframe.contentWindow.document;

        code.open();
            var htmlElement = document.createElement('html');
            var headElement = document.createElement('head');
            var style = document.createElement('style');
                style.type = 'text/css';
                style.appendChild(document.createTextNode(hent.decode(css.innerText)))
            var body = document.createElement('body');
                body.innerHTML = hent.decode(html.innerText);
            headElement.appendChild(style);
            htmlElement.appendChild(headElement)
            var parser=new DOMParser();
            var htmlDoc=parser.parseFromString(hent.decode(html.innerText), "text/html");
            htmlElement.appendChild(body);
            code.appendChild(htmlDoc.getElementsByTagName('body')[0]);
        code.close();
        code.open();
            var scriptElement = document.createElement('script');
                scriptElement.type = 'text/javascript';
                scriptElement.appendChild(document.createTextNode(
                        "var debug = { log : (msg) => { document.getElementsByTagName('debug')[0].innerText = msg; } }; var ast = { tokenize : x => parent.esprima.tokenize(x.toString()), parse: x => parent.esprima.parseScript(x.toString()) }; var tree = x => parent.treeify.asTree(x, true); " +hent.decode(js.innerText)
                    )
                );
            headElement.appendChild(scriptElement);
            htmlElement.appendChild(headElement);
            code.appendChild(htmlElement)
        code.close();
        window.componentHandler.upgradeDom();
    };
	const hent = {

		encode : function(str) {
			var buf = [];

			for (var i=str.length-1;i>=0;i--) {
				buf.unshift(['&#', str[i].charCodeAt(), ';'].join(''));
			}

			return buf.join('');
		},

		decode : function(str) {
			return str.replace(/&#(\d+);/g, function(match, dec) {
				return String.fromCharCode(dec);
			});
		}
	};
    function textareaEvent (sample) {
        var run = new Event('run');
        console.log('loading demo')
        document.getElementById(sample).addEventListener('run', function (e) {
                compile(
                    document.getElementById(sample).getElementsByClassName('html')[0],
                    document.getElementById(sample).getElementsByClassName('css')[0],
                    document.getElementById(sample).getElementsByClassName('javascript')[0],
                    document.getElementById(sample).getElementsByClassName('code')[0]
                );
            } , false
        );
        document.getElementById(sample).getElementsByClassName('html')[0].oninput = function () {
            document.getElementById(sample).dispatchEvent(run);
        }
        document.getElementById(sample).getElementsByClassName('css')[0].oninput = function () {
            document.getElementById(sample).dispatchEvent(run);
        }
        document.getElementById(sample).getElementsByClassName('javascript')[0].oninput = function () {
            document.getElementById(sample).dispatchEvent(run);
        }
        document.getElementById(sample).dispatchEvent(run);
    }

    this.on('before-mount', function(event) {

        reve.initialize(
            { head: window.head },
            {
            dependencies: [

                { src: 'socket.io/socket.io.js', async: true },
		        { src: 'bundle/'+reveclient, async: true },
                { src: 'bundle/'+marked },
                { src: 'bundle/'+markdown },
                { src: 'bundle/'+notes, async:true },
                { src: 'bundle/'+zoom, async: true },
                { src: 'bundle/'+highlight, async: true, callback: function () { hljs.initHighlightingOnLoad(); } },
            ],
            width: "100%",
            height: "100%",
            margin: 0.1,
            minScale: 0.2,
            maxScale: 1.5
        });
    })
    this.on('mount', function(event) {

        var samples = [ 'samp1','samp2','samp4','samp5' ]
        samples.map( x => textareaEvent(x) );

		document.addEventListener( 'keydown', function( event ) {

			if ( document.querySelector( ':focus' ) !== null || event.shiftKey || event.altKey || event.ctrlKey || event.metaKey ) return;

			if( event.keyCode === 83 ) {
				event.preventDefault();
                RevealNotes().open(window.notesLink);

			}
		}, false );

    })

});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(51), __webpack_require__(159), __webpack_require__(160), __webpack_require__(50), __webpack_require__(74)["default"], __webpack_require__(162), __webpack_require__(163), __webpack_require__(164), __webpack_require__(165), __webpack_require__(166), __webpack_require__(167)))

/***/ })

},[[127,1]]]);